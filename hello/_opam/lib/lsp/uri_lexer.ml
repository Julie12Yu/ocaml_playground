# 1 "lsp/src/uri_lexer.mll"
 

open Import

type t =
  { scheme : string
  ; authority : string
  ; path : string
  ; query: string option
  }

let int_of_hex_char c =
  let c = int_of_char (Char.uppercase_ascii c) - 48 in
  if c > 9 then
    if c > 16 && c < 23 then Some (c - 7) else None
  else if c >= 0 then
    Some c
  else
    None

let value_exn = function
   | None -> assert false
   | Some s -> s

let char_of_hexdigits high low =
  let high = value_exn (int_of_hex_char high) in
  let low = value_exn (int_of_hex_char low) in
  Char.chr (high lsl 4 + low)

(* https://github.com/mirage/ocaml-uri/blob/master/lib/uri.ml#L318 *)
let decode b =
  let len = String.length b in
  let buf = Buffer.create len in
  let rec scan start cur =
    if cur >= len then
      Buffer.add_substring buf b start (cur - start)
    else if b.[cur] = '%' then (
      Buffer.add_substring buf b start (cur - start);
      let cur = cur + 1 in
      if cur >= len then
        Buffer.add_char buf '%'
      else
        match int_of_hex_char b.[cur] with
        | None ->
          Buffer.add_char buf '%';
          scan cur cur
        | Some highbits ->
          let cur = cur + 1 in
          if cur >= len then (
            Buffer.add_char buf '%';
            Buffer.add_char buf b.[cur - 1])
          else
            let start_at =
              match int_of_hex_char b.[cur] with
              | Some lowbits ->
                Buffer.add_char buf (Char.chr ((highbits lsl 4) + lowbits));
                cur + 1
              | None ->
                Buffer.add_char buf '%';
                Buffer.add_char buf b.[cur - 1];
                cur
            in
            scan start_at start_at)
    else
      scan start (cur + 1)
  in
  scan 0 0;
  Buffer.contents buf

# 72 "lsp/src/uri_lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\253\255\079\000\255\255\102\000\254\255\126\000\009\000\
    \061\000\127\000\128\000\147\000\025\000\102\000\148\000\150\000\
    \027\000\103\000\255\255\255\255\158\000\056\000\125\000\255\255\
    \255\255\045\000\001\000\046\000\002\000\047\000\003\000";
  Lexing.lex_backtrk =
   "\002\000\255\255\255\255\255\255\255\255\255\255\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\255\255\000\000\000\000\000\000\255\255\
    \255\255\000\000\004\000\003\000\003\000\002\000\001\000";
  Lexing.lex_default =
   "\255\255\000\000\255\255\000\000\255\255\000\000\010\000\007\000\
    \008\000\008\000\010\000\013\000\012\000\013\000\013\000\015\000\
    \016\000\017\000\000\000\000\000\020\000\021\000\022\000\000\000\
    \000\000\026\000\026\000\028\000\028\000\029\000\030\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\003\000\000\000\001\000\003\000\002\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\024\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\019\000\003\000\018\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\023\000\027\000\029\000\030\000\003\000\
    \255\255\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\003\000\000\000\007\000\000\000\003\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\255\255\255\255\000\000\000\000\000\000\000\000\000\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\005\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\005\000\005\000\005\000\
    \255\255\255\255\255\255\255\255\000\000\012\000\016\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\009\000\020\000\008\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\255\255\255\255\
    \008\000\255\255\011\000\000\000\021\000\007\000\007\000\007\000\
    \000\000\255\255\014\000\015\000\000\000\017\000\000\000\005\000\
    \005\000\005\000\005\000\005\000\005\000\022\000\000\000\000\000\
    \000\000\000\000\012\000\012\000\000\000\016\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\021\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\255\255\255\255\255\255\000\000\000\000\000\000\000\000\
    \000\000\255\255\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\255\255\000\000\255\255\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \255\255\000\000\000\000\000\000\000\000\255\255\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\255\255\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\255\255\000\000\255\255\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\255\255";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\255\255\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\007\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\012\000\000\000\016\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\021\000\025\000\027\000\029\000\000\000\
    \008\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\255\255\008\000\255\255\000\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\013\000\017\000\255\255\255\255\255\255\255\255\255\255\
    \002\000\002\000\002\000\002\000\002\000\002\000\004\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \022\000\006\000\009\000\010\000\255\255\013\000\017\000\004\000\
    \004\000\004\000\004\000\004\000\004\000\006\000\009\000\010\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\011\000\014\000\
    \006\000\015\000\010\000\255\255\022\000\006\000\009\000\010\000\
    \255\255\020\000\011\000\014\000\255\255\015\000\255\255\004\000\
    \004\000\004\000\004\000\004\000\004\000\020\000\255\255\255\255\
    \255\255\255\255\011\000\014\000\255\255\015\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\020\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\026\000\028\000\030\000\255\255\255\255\255\255\255\255\
    \255\255\007\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\012\000\255\255\016\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\025\000\027\000\029\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \021\000\255\255\255\255\255\255\255\255\008\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\013\000\017\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\022\000\006\000\009\000\
    \010\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\011\000\014\000\255\255\015\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\020\000";
  Lexing.lex_base_code =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\001\000\
    \002\000\003\000\004\000\005\000\006\000\007\000\008\000\009\000\
    \010\000\011\000\105\000\068\000\013\000\014\000\017\000\135\000\
    \025\000\000\000\000\000\006\000\000\000\012\000\000\000";
  Lexing.lex_backtrk_code =
   "\000\000\000\000\000\000\000\000\000\000\000\000\001\000\025\000\
    \001\000\001\000\001\000\055\000\068\000\055\000\055\000\083\000\
    \105\000\083\000\000\000\000\000\122\000\135\000\122\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\153\000";
  Lexing.lex_default_code =
   "\000\000\000\000\000\000\000\000\000\000\000\000\012\000\038\000\
    \017\000\017\000\012\000\017\000\038\000\017\000\017\000\098\000\
    \038\000\017\000\000\000\000\000\098\000\038\000\017\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\150\000\000\000";
  Lexing.lex_trans_code =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\000\
    \000\000\000\000\041\000\017\000\000\000\150\000\000\000\041\000\
    \017\000\000\000\017\000\000\000\017\000\000\000\050\000\020\000\
    \000\000\020\000\020\000\020\000\020\000\000\000\020\000\020\000\
    \020\000\000\000\020\000\000\000\020\000\000\000\000\000\000\000\
    \020\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000";
  Lexing.lex_check_code =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\006\000\007\000\008\000\009\000\010\000\
    \011\000\012\000\013\000\014\000\015\000\016\000\017\000\006\000\
    \020\000\021\000\009\000\010\000\022\000\027\000\255\255\014\000\
    \015\000\255\255\006\000\029\000\020\000\255\255\010\000\006\000\
    \255\255\008\000\009\000\010\000\011\000\255\255\013\000\014\000\
    \015\000\255\255\017\000\255\255\020\000\255\255\255\255\255\255\
    \022\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \006\000\007\000\008\000\009\000\010\000\011\000\012\000\013\000\
    \014\000\015\000\016\000\017\000\029\000\020\000\021\000\255\255\
    \255\255\022\000";
  Lexing.lex_code =
   "\255\007\255\005\255\003\255\000\009\001\008\255\013\255\008\255\
    \255\008\255\255\012\255\011\255\255\007\255\003\255\005\012\004\
    \011\000\009\001\008\255\011\255\255\015\255\014\255\009\255\008\
    \255\255\009\255\008\255\255\005\255\003\255\007\010\006\013\000\
    \009\001\008\255\003\255\007\010\006\013\005\012\004\011\000\009\
    \001\008\255\005\255\007\010\006\013\000\009\001\008\003\015\002\
    \014\255\009\255\008\255\014\255\255\007\010\006\013\005\012\004\
    \011\000\009\001\008\003\015\002\014\255\007\255\005\255\000\009\
    \001\008\003\015\002\014\255\007\255\005\012\004\011\000\009\001\
    \008\003\015\002\014\255\001\255\255\000\001\255";
}

let rec query b lexbuf =
   __ocaml_lex_query_rec b lexbuf 0
and __ocaml_lex_query_rec b lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
let
# 76 "lsp/src/uri_lexer.mll"
                                                  c
# 303 "lsp/src/uri_lexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 76 "lsp/src/uri_lexer.mll"
                                                    ( Buffer.add_char b c; query b lexbuf )
# 307 "lsp/src/uri_lexer.ml"

  | 1 ->
let
# 77 "lsp/src/uri_lexer.mll"
                   high
# 313 "lsp/src/uri_lexer.ml"
= Lexing.sub_lexeme_char lexbuf (lexbuf.Lexing.lex_start_pos + 1)
and
# 77 "lsp/src/uri_lexer.mll"
                                      low
# 318 "lsp/src/uri_lexer.ml"
= Lexing.sub_lexeme_char lexbuf (lexbuf.Lexing.lex_start_pos + 2) in
# 78 "lsp/src/uri_lexer.mll"
  ( Buffer.add_char b (char_of_hexdigits high low);
    query b lexbuf
  )
# 324 "lsp/src/uri_lexer.ml"

  | 2 ->
# 81 "lsp/src/uri_lexer.mll"
                 ( Buffer.contents b )
# 329 "lsp/src/uri_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_query_rec b lexbuf __ocaml_lex_state

and uri lexbuf =
  lexbuf.Lexing.lex_mem <- Array.make 16 (-1);(* L=3 [10] <- p ; [9] <- p ; [8] <- p ;  *)
  lexbuf.Lexing.lex_mem.(10) <- lexbuf.Lexing.lex_curr_pos ;
  lexbuf.Lexing.lex_mem.(9) <- lexbuf.Lexing.lex_curr_pos ;
  lexbuf.Lexing.lex_mem.(8) <- lexbuf.Lexing.lex_curr_pos ;
 __ocaml_lex_uri_rec lexbuf 6
and __ocaml_lex_uri_rec lexbuf __ocaml_lex_state =
  match Lexing.new_engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
let
# 84 "lsp/src/uri_lexer.mll"
                        scheme
# 346 "lsp/src/uri_lexer.ml"
= Lexing.sub_lexeme_opt lexbuf lexbuf.Lexing.lex_mem.(7) lexbuf.Lexing.lex_mem.(6)
and
# 85 "lsp/src/uri_lexer.mll"
                           authority
# 351 "lsp/src/uri_lexer.ml"
= Lexing.sub_lexeme_opt lexbuf lexbuf.Lexing.lex_mem.(3) lexbuf.Lexing.lex_mem.(2)
and
# 86 "lsp/src/uri_lexer.mll"
                 path
# 356 "lsp/src/uri_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_mem.(0) lexbuf.Lexing.lex_mem.(1)
and
# 87 "lsp/src/uri_lexer.mll"
                   raw_query
# 361 "lsp/src/uri_lexer.ml"
= Lexing.sub_lexeme_opt lexbuf lexbuf.Lexing.lex_mem.(5) lexbuf.Lexing.lex_mem.(4) in
# 88 "lsp/src/uri_lexer.mll"
(
  let scheme = scheme |> Option.value ~default:"file" in
  let authority =
    authority |> Option.map decode |> Option.value ~default:""
  in
  let path =
    let path = path |> decode in
    match scheme with
    | "http" | "https" | "file" ->
      String.add_prefix_if_not_exists path ~prefix:"/"
    | _ -> path
  in
  let query =
    match raw_query with
    | None -> None
    | Some c -> Some (query (Buffer.create (String.length c)) (Lexing.from_string c))
  in
  { scheme; authority; path; query }
)
# 383 "lsp/src/uri_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_uri_rec lexbuf __ocaml_lex_state

and path lexbuf =
  lexbuf.Lexing.lex_mem <- Array.make 2 (-1); __ocaml_lex_path_rec lexbuf 25
and __ocaml_lex_path_rec lexbuf __ocaml_lex_state =
  match Lexing.new_engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 109 "lsp/src/uri_lexer.mll"
     ( { scheme = "file"; authority = ""; path = "/"; query = None } )
# 395 "lsp/src/uri_lexer.ml"

  | 1 ->
let
# 110 "lsp/src/uri_lexer.mll"
                    authority
# 401 "lsp/src/uri_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 2) lexbuf.Lexing.lex_mem.(0)
and
# 110 "lsp/src/uri_lexer.mll"
                                           path
# 406 "lsp/src/uri_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_mem.(0) lexbuf.Lexing.lex_curr_pos in
# 110 "lsp/src/uri_lexer.mll"
                                                 ( { scheme = "file"; authority; path ; query = None } )
# 410 "lsp/src/uri_lexer.ml"

  | 2 ->
let
# 111 "lsp/src/uri_lexer.mll"
                    authority
# 416 "lsp/src/uri_lexer.ml"
= Lexing.sub_lexeme lexbuf (lexbuf.Lexing.lex_start_pos + 2) lexbuf.Lexing.lex_curr_pos in
# 111 "lsp/src/uri_lexer.mll"
                               ( { scheme = "file"; authority; path = "/" ; query = None } )
# 420 "lsp/src/uri_lexer.ml"

  | 3 ->
let
# 112 "lsp/src/uri_lexer.mll"
             path
# 426 "lsp/src/uri_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 112 "lsp/src/uri_lexer.mll"
                   ( { scheme = "file"; authority = ""; path ; query = None } )
# 430 "lsp/src/uri_lexer.ml"

  | 4 ->
let
# 113 "lsp/src/uri_lexer.mll"
         path
# 436 "lsp/src/uri_lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 113 "lsp/src/uri_lexer.mll"
               ( { scheme = "file"; authority = ""; path = "/" ^ path ; query = None } )
# 440 "lsp/src/uri_lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_path_rec lexbuf __ocaml_lex_state

;;

# 115 "lsp/src/uri_lexer.mll"
 
  let of_string s =
    let lexbuf = Lexing.from_string s in
    uri lexbuf

  let of_path s =
    let lexbuf = Lexing.from_string s in
    path lexbuf

# 457 "lsp/src/uri_lexer.ml"
